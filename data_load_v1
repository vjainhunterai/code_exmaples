import os
import pandas as pd
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

class DataLoader:
    def __init__(self, file_type, table_name, directory_path, delimiter, db_uri):
        self.file_type = file_type.lower()
        self.table_name = table_name
        self.directory_path = directory_path
        self.delimiter = delimiter
        self.engine = create_engine(db_uri)
        self.Session = sessionmaker(bind=self.engine)
    
    def load_data(self):
        files = [f for f in os.listdir(self.directory_path) if self.file_type in f.lower()]
        for file in files:
            file_path = os.path.join(self.directory_path, file)
            data = self._read_file(file_path)
            if data is not None:
                self._insert_data(data)
    
    def _read_file(self, file_path):
        try:
            return pd.read_csv(file_path, delimiter=self.delimiter)
        except Exception as e:
            print(f"Error reading file {file_path}: {e}")
            return None

    def _insert_data(self, data):
        try:
            with self.engine.begin() as connection:
                data.to_sql(self.table_name, con=connection, if_exists='append', index=False)
        except Exception as e:
            print(f"Error inserting data into {self.table_name}: {e}")
    
    def close(self):
        self.engine.dispose()

# Example usage
# db_uri = "mysql+pymysql://username:password@host:port/database_name"
# loader = DataLoader(file_type='ap', table_name='target_table', directory_path='/path/to/files', delimiter=',', db_uri=db_uri)
# loader.load_data()
# loader.close()
